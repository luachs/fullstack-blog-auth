const jwt = require('jsonwebtoken')

const authMiddleware = (req, res, next) => {
  const authHeader = req.headers.authorization
  if (!authHeader || !authHeader.startsWith('Bearer ')) {
    return res.status(401).json({ success: false, message: 'Kh√¥ng c√≥ token' })
  }

  const token = authHeader.split(' ')[1]

  try {
    const decoded = jwt.verify(token, 'my-secret-key')
    req.user = decoded
    next()
  } catch (err) {
    return res.status(401).json({ success: false, message: 'Token kh√¥ng h·ª£p l·ªá' })
  }
}

// üëâ Middleware ki·ªÉm tra quy·ªÅn admin
const requireAdmin = (req, res, next) => {
  if (req.user?.role !== 'admin') {
    return res.status(403).json({ success: false, message: 'Ch·ªâ admin ƒë∆∞·ª£c ph√©p th·ª±c hi·ªán thao t√°c n√†y' })
  }
  next()
}

module.exports = {
  authMiddleware,
  requireAdmin
}
